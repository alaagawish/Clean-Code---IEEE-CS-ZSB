Meaningful Names 

-- Choosing good names takes time but saves more than it takes. 

--meaningful names tell you why it exists, what it does, how it is used, and it doesn’t  require a comment.

--It is not sufficient to add number series or noise words, even though the compiler is satisfied. 
        If names must be different, then they should also mean something different.
      
--Noise words are redundant. The word variable should never appear in a variable name. 
 				The word table should never appear in a table name.
				
--Use pronounceable names ,use searchable names.

-- If a variable or constant might be seen or used in multiple places in a body of code,
				it is imperative to give it a search-friendly name. 
				
--Encoded names are seldom pronounceable and are easy to mis-type, avoid encodings.				

--Choosing names that reveal intent make it much easier to understand and change code.

--Names of the classes, variables, and methods must be meaningful and clearly indicate what a method does or what an attribute is.

--avoid words whose entrenched meanings vary from our intended meaning ”Say what you mean. Mean what you say.”

--A class name should not be a verb.

--Classes and objects should have noun or noun phrase names,Methods should have verb or verb phrase names.

--Accessors, mutators, and predicates should be named for their value and prefixed with get,
				set, and is according to the javabean standard.

--Cuteness in code often appears in the form of colloquialisms or slang.DON'T BE CUTE.
				not everyone will understand colloquianlism words.
				
--Avoid acronyms and avoid confusing names, which may bring anyone who reads the code to the wrong conclusions.

--use (CS) terms, algorithm names, pattern names, math terms, and so forth
